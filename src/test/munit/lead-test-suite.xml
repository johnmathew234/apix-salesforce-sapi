<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="lead-test-suite.xml" />
	<munit:test name="lead-test-suite-query-all-lead-flowTest" doc:id="da499e66-a09a-43fb-b8bf-228f883d8691" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="304e1d2f-69eb-4122-b10e-81dedaed7ec3" processor="salesforce:query">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="8a591134-bac8-4607-b129-aef5f206005d" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[[&#10;    {&#10;        "Email": "bertha@fcof.net",&#10;        "FirstName": "Bertha",&#10;        "Phone": "(850) 644-4200",&#10;        "Title": "Director of Vendor Relations",&#10;        "Id": null,&#10;        "LastName": "Boxer",&#10;        "type": "Lead"&#10;    },&#10;    {&#10;        "Email": "pcotton@abbottins.net",&#10;        "FirstName": "Phyllis",&#10;        "Phone": "(703) 757-1000",&#10;        "Title": "CFO",&#10;        "Id": null,&#10;        "LastName": "Cotton",&#10;        "type": "Lead"&#10;    },&#10;    {&#10;        "Email": "jeffg@jackson.com",&#10;        "FirstName": "Jeff",&#10;        "Phone": "886-2-25474189",&#10;        "Title": "SVP, Procurement",&#10;        "Id": null,&#10;        "LastName": "Glimpse",&#10;        "type": "Lead"&#10;    },&#10;    {&#10;        "Email": "likeb@metro.com",&#10;        "FirstName": "Mike",&#10;        "Phone": "(410) 381-2334",&#10;        "Title": "VP, Technology",&#10;        "Id": null,&#10;        "LastName": "Braund",&#10;        "type": "Lead"&#10;    },&#10;    {&#10;        "Email": "patricia_feager@is.com",&#10;        "FirstName": "Patricia",&#10;        "Phone": "(336) 777-1970",&#10;        "Title": "CEO",&#10;        "Id": null,&#10;        "LastName": "Feager",&#10;        "type": "Lead"&#10;    },&#10;    {&#10;        "Email": "brenda@cardinal.net",&#10;        "FirstName": "Brenda",&#10;        "Phone": "(847) 262-5000",&#10;        "Title": "CFO",&#10;        "Id": null,&#10;        "LastName": "Mcclure",&#10;        "type": "Lead"&#10;    },&#10;    {&#10;        "Email": "violetm@emersontransport.com",&#10;        "FirstName": "Violet",&#10;        "Phone": "(770) 395-2370",&#10;        "Title": "VP, Finance",&#10;        "Id": null,&#10;        "LastName": "Maccleod",&#10;        "type": "Lead"&#10;    },&#10;    {&#10;        "Email": "ksynder@tnr.net",&#10;        "FirstName": "Kathy",&#10;        "Phone": "(860) 273-0123",&#10;        "Title": "Regional General Manager",&#10;        "Id": null,&#10;        "LastName": "Snyder",&#10;        "type": "Lead"&#10;    },&#10;    {&#10;        "Email": "tom.james@delphi.chemicals.com",&#10;        "FirstName": "Tom",&#10;        "Phone": "(952) 346-3500",&#10;        "Title": "SVP, Production",&#10;        "Id": null,&#10;        "LastName": "James",&#10;        "type": "Lead"&#10;    },&#10;    {&#10;        "Email": "shellyb@westerntelecom.com",&#10;        "FirstName": "Shelly",&#10;        "Phone": "(408) 326-9000",&#10;        "Title": "SVP, Technology",&#10;        "Id": null,&#10;        "LastName": "Brownell",&#10;        "type": "Lead"&#10;    },&#10;    {&#10;        "Email": "pam_owenby@hendricksontrading.com",&#10;        "FirstName": "Pamela",&#10;        "Phone": "(570) 326-1571",&#10;        "Title": "SVP, Technology",&#10;        "Id": null,&#10;        "LastName": "Owenby",&#10;        "type": "Lead"&#10;    },&#10;    {&#10;        "Email": "norm_may@greenwich.net",&#10;        "FirstName": "Norm",&#10;        "Phone": "(419) 289-3555",&#10;        "Title": "VP, Facilities",&#10;        "Id": null,&#10;        "LastName": "May",&#10;        "type": "Lead"&#10;    },&#10;    {&#10;        "Email": "pat@pyramid.net",&#10;        "FirstName": "Pat",&#10;        "Phone": "33562156600",&#10;        "Title": "SVP, Administration and Finance",&#10;        "Id": null,&#10;        "LastName": "Stumuller",&#10;        "type": "Lead"&#10;    },&#10;    {&#10;        "Email": "a_young@dickenson.com",&#10;        "FirstName": "Andy",&#10;        "Phone": "(620) 241-6200",&#10;        "Title": "SVP, Operations",&#10;        "Id": null,&#10;        "LastName": "Young",&#10;        "type": "Lead"&#10;    },&#10;    {&#10;        "Email": "kakin@athenahome.com",&#10;        "FirstName": "Kristen",&#10;        "Phone": "(434) 369-3100",&#10;        "Title": "Director, Warehouse Mgmt",&#10;        "Id": null,&#10;        "LastName": "Akin",&#10;        "type": "Lead"&#10;    },&#10;    {&#10;        "Email": "david@blues.com",&#10;        "FirstName": "David",&#10;        "Phone": "(033) 452-1299",&#10;        "Title": "CFO",&#10;        "Id": null,&#10;        "LastName": "Monaco",&#10;        "type": "Lead"&#10;    },&#10;    {&#10;        "Email": "carolync@aceis.com",&#10;        "FirstName": "Carolyn",&#10;        "Phone": "(251) 679-2200",&#10;        "Title": "VP, Technology",&#10;        "Id": null,&#10;        "LastName": "Crenshaw",&#10;        "type": "Lead"&#10;    },&#10;    {&#10;        "Email": "jrogers@btca.com",&#10;        "FirstName": "Jack",&#10;        "Phone": "(336) 222-7000",&#10;        "Title": "VP, Facilities",&#10;        "Id": null,&#10;        "LastName": "Rogers",&#10;        "type": "Lead"&#10;    },&#10;    {&#10;        "Email": "bill_dadio@zenith.com",&#10;        "FirstName": "Bill",&#10;        "Phone": "(614) 431-5000",&#10;        "Title": "CFO",&#10;        "Id": null,&#10;        "LastName": "Dadio Jr",&#10;        "type": "Lead"&#10;    },&#10;    {&#10;        "Email": "eluce@pacificretail.com",&#10;        "FirstName": "Eugena",&#10;        "Phone": "(781) 270-6500",&#10;        "Title": "CEO",&#10;        "Id": null,&#10;        "LastName": "Luce",&#10;        "type": "Lead"&#10;    },&#10;    {&#10;        "Email": "sandra_e@highland.net",&#10;        "FirstName": "Sandra",&#10;        "Phone": "(626) 440-0700",&#10;        "Title": "VP, Production",&#10;        "Id": null,&#10;        "LastName": "Eberhard",&#10;        "type": "Lead"&#10;    },&#10;    {&#10;        "Email": "bblair@abankingco.com",&#10;        "FirstName": "Betty",&#10;        "Phone": "(610) 265-9100",&#10;        "Title": "VP, Administration",&#10;        "Id": null,&#10;        "LastName": "Bair",&#10;        "type": "Lead"&#10;    }&#10;]]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="query-all-lead-flow" doc:id="bfcd27b2-bf89-496c-b4ae-efa3cee477e5" name="query-all-lead-flow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Assert equals" doc:id="e5a9ffa2-7117-41e9-8390-59434b9452fd" actual="#[payload]" expected='#[[&#10;    {&#10;        "Email": "bertha@fcof.net",&#10;        "FirstName": "Bertha",&#10;        "Phone": "(850) 644-4200",&#10;        "Title": "Director of Vendor Relations",&#10;        "Id": null,&#10;        "LastName": "Boxer",&#10;        "type": "Lead"&#10;    },&#10;    {&#10;        "Email": "pcotton@abbottins.net",&#10;        "FirstName": "Phyllis",&#10;        "Phone": "(703) 757-1000",&#10;        "Title": "CFO",&#10;        "Id": null,&#10;        "LastName": "Cotton",&#10;        "type": "Lead"&#10;    },&#10;    {&#10;        "Email": "jeffg@jackson.com",&#10;        "FirstName": "Jeff",&#10;        "Phone": "886-2-25474189",&#10;        "Title": "SVP, Procurement",&#10;        "Id": null,&#10;        "LastName": "Glimpse",&#10;        "type": "Lead"&#10;    },&#10;    {&#10;        "Email": "likeb@metro.com",&#10;        "FirstName": "Mike",&#10;        "Phone": "(410) 381-2334",&#10;        "Title": "VP, Technology",&#10;        "Id": null,&#10;        "LastName": "Braund",&#10;        "type": "Lead"&#10;    },&#10;    {&#10;        "Email": "patricia_feager@is.com",&#10;        "FirstName": "Patricia",&#10;        "Phone": "(336) 777-1970",&#10;        "Title": "CEO",&#10;        "Id": null,&#10;        "LastName": "Feager",&#10;        "type": "Lead"&#10;    },&#10;    {&#10;        "Email": "brenda@cardinal.net",&#10;        "FirstName": "Brenda",&#10;        "Phone": "(847) 262-5000",&#10;        "Title": "CFO",&#10;        "Id": null,&#10;        "LastName": "Mcclure",&#10;        "type": "Lead"&#10;    },&#10;    {&#10;        "Email": "violetm@emersontransport.com",&#10;        "FirstName": "Violet",&#10;        "Phone": "(770) 395-2370",&#10;        "Title": "VP, Finance",&#10;        "Id": null,&#10;        "LastName": "Maccleod",&#10;        "type": "Lead"&#10;    },&#10;    {&#10;        "Email": "ksynder@tnr.net",&#10;        "FirstName": "Kathy",&#10;        "Phone": "(860) 273-0123",&#10;        "Title": "Regional General Manager",&#10;        "Id": null,&#10;        "LastName": "Snyder",&#10;        "type": "Lead"&#10;    },&#10;    {&#10;        "Email": "tom.james@delphi.chemicals.com",&#10;        "FirstName": "Tom",&#10;        "Phone": "(952) 346-3500",&#10;        "Title": "SVP, Production",&#10;        "Id": null,&#10;        "LastName": "James",&#10;        "type": "Lead"&#10;    },&#10;    {&#10;        "Email": "shellyb@westerntelecom.com",&#10;        "FirstName": "Shelly",&#10;        "Phone": "(408) 326-9000",&#10;        "Title": "SVP, Technology",&#10;        "Id": null,&#10;        "LastName": "Brownell",&#10;        "type": "Lead"&#10;    },&#10;    {&#10;        "Email": "pam_owenby@hendricksontrading.com",&#10;        "FirstName": "Pamela",&#10;        "Phone": "(570) 326-1571",&#10;        "Title": "SVP, Technology",&#10;        "Id": null,&#10;        "LastName": "Owenby",&#10;        "type": "Lead"&#10;    },&#10;    {&#10;        "Email": "norm_may@greenwich.net",&#10;        "FirstName": "Norm",&#10;        "Phone": "(419) 289-3555",&#10;        "Title": "VP, Facilities",&#10;        "Id": null,&#10;        "LastName": "May",&#10;        "type": "Lead"&#10;    },&#10;    {&#10;        "Email": "pat@pyramid.net",&#10;        "FirstName": "Pat",&#10;        "Phone": "33562156600",&#10;        "Title": "SVP, Administration and Finance",&#10;        "Id": null,&#10;        "LastName": "Stumuller",&#10;        "type": "Lead"&#10;    },&#10;    {&#10;        "Email": "a_young@dickenson.com",&#10;        "FirstName": "Andy",&#10;        "Phone": "(620) 241-6200",&#10;        "Title": "SVP, Operations",&#10;        "Id": null,&#10;        "LastName": "Young",&#10;        "type": "Lead"&#10;    },&#10;    {&#10;        "Email": "kakin@athenahome.com",&#10;        "FirstName": "Kristen",&#10;        "Phone": "(434) 369-3100",&#10;        "Title": "Director, Warehouse Mgmt",&#10;        "Id": null,&#10;        "LastName": "Akin",&#10;        "type": "Lead"&#10;    },&#10;    {&#10;        "Email": "david@blues.com",&#10;        "FirstName": "David",&#10;        "Phone": "(033) 452-1299",&#10;        "Title": "CFO",&#10;        "Id": null,&#10;        "LastName": "Monaco",&#10;        "type": "Lead"&#10;    },&#10;    {&#10;        "Email": "carolync@aceis.com",&#10;        "FirstName": "Carolyn",&#10;        "Phone": "(251) 679-2200",&#10;        "Title": "VP, Technology",&#10;        "Id": null,&#10;        "LastName": "Crenshaw",&#10;        "type": "Lead"&#10;    },&#10;    {&#10;        "Email": "jrogers@btca.com",&#10;        "FirstName": "Jack",&#10;        "Phone": "(336) 222-7000",&#10;        "Title": "VP, Facilities",&#10;        "Id": null,&#10;        "LastName": "Rogers",&#10;        "type": "Lead"&#10;    },&#10;    {&#10;        "Email": "bill_dadio@zenith.com",&#10;        "FirstName": "Bill",&#10;        "Phone": "(614) 431-5000",&#10;        "Title": "CFO",&#10;        "Id": null,&#10;        "LastName": "Dadio Jr",&#10;        "type": "Lead"&#10;    },&#10;    {&#10;        "Email": "eluce@pacificretail.com",&#10;        "FirstName": "Eugena",&#10;        "Phone": "(781) 270-6500",&#10;        "Title": "CEO",&#10;        "Id": null,&#10;        "LastName": "Luce",&#10;        "type": "Lead"&#10;    },&#10;    {&#10;        "Email": "sandra_e@highland.net",&#10;        "FirstName": "Sandra",&#10;        "Phone": "(626) 440-0700",&#10;        "Title": "VP, Production",&#10;        "Id": null,&#10;        "LastName": "Eberhard",&#10;        "type": "Lead"&#10;    },&#10;    {&#10;        "Email": "bblair@abankingco.com",&#10;        "FirstName": "Betty",&#10;        "Phone": "(610) 265-9100",&#10;        "Title": "VP, Administration",&#10;        "Id": null,&#10;        "LastName": "Bair",&#10;        "type": "Lead"&#10;    }&#10;]]'/>
		</munit:validation>
	</munit:test>
	<munit:test name="lead-test-suite-query-lead-by-id-flowTest" doc:id="857dba0d-92c7-482a-8d78-28d0ece13b07" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="fd976608-d595-4d70-9a79-f41a36880685" processor="salesforce:query">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="2c13a8db-5451-40d3-8425-609bd43c6beb" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[[&#10;    {&#10;        "Email": "bertha@fcof.net",&#10;        "FirstName": "Bertha",&#10;        "Phone": "(850) 644-4200",&#10;        "Title": "Director of Vendor Relations",&#10;        "Id": null,&#10;        "LastName": "Boxer",&#10;        "type": "Lead"&#10;    }&#10;]]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Event" doc:id="bf615f2a-729e-42ae-b095-3d84bca97170" >
				<munit:attributes value='#[{"uriParams":{"leadid":"0015g000002YSB7AAO"}}]' />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="query-lead-by-id-flow" doc:id="5c975753-4311-43b7-a961-900623466aba" name="query-lead-by-id-flow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Assert equals" doc:id="5a012e72-af28-493d-a6b4-4873987fa6cf" actual="#[payload]" expected='#[[&#10;    {&#10;        "Email": "bertha@fcof.net",&#10;        "FirstName": "Bertha",&#10;        "Phone": "(850) 644-4200",&#10;        "Title": "Director of Vendor Relations",&#10;        "Id": null,&#10;        "LastName": "Boxer",&#10;        "type": "Lead"&#10;    }&#10;]]'/>
		</munit:validation>
	</munit:test>
	<munit:test name="lead-test-suite-post-lead-flowTest" doc:id="320f27f4-c1fa-4a2c-9ae0-646de2326b57" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="70c6adcb-7288-4564-b7ad-0c8cabcc67d9" processor="salesforce:create">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="ed109478-be16-4bb7-90ea-b3b3dd7306d1" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[{&#10;    "id": null,&#10;    "items": [&#10;        {&#10;            "exception": null,&#10;            "message": null,&#10;            "payload": {&#10;                "success": true,&#10;                "id": "00Q5g000008DLS2EAO",&#10;                "errors": []&#10;            },&#10;            "id": "00Q5g000008DLS2EAO",&#10;            "statusCode": null,&#10;            "successful": true&#10;        }&#10;    ],&#10;    "successful": true&#10;}]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Event" doc:id="f2116662-6333-471a-bcf6-563468b6e1f6" >
				<munit:payload value='#[ [{&#10;        "Email": "bertha@fcof.net",&#10;        "FirstName": "Betha",&#10;        "Phone": "(850) 644-4205",&#10;        "Title": "vendor Relations",&#10;        "Id": null,&#10;        "LastName": "bo",&#10;        "Company":"tata",&#10;        "type": "Lead"&#10;    }&#10;]]' />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name=" post-lead-flow" doc:id="50eb43a1-9151-4b57-ac5e-ddf200ff3690" name="post-lead-flow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Assert equals" doc:id="7203370e-7c6e-4fcd-a82d-1b375bb25e3b" actual="#[payload]" expected='#[{&#10;    "id": null,&#10;    "items": [&#10;        {&#10;            "exception": null,&#10;            "message": null,&#10;            "payload": {&#10;                "success": true,&#10;                "id": "00Q5g000008DLS2EAO",&#10;                "errors": []&#10;            },&#10;            "id": "00Q5g000008DLS2EAO",&#10;            "statusCode": null,&#10;            "successful": true&#10;        }&#10;    ],&#10;    "successful": true&#10;}]'/>
		</munit:validation>
	</munit:test>
	<munit:test name="lead-test-suite-upsert-lead-flowTest" doc:id="e13b5f2d-0875-47f1-b848-40a769189d1f" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="852bdca8-4aab-40bc-8bf9-928b1c39b2fd" processor="salesforce:upsert">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="8d622ecf-c3b3-4fb6-9764-09a5df04ee2e" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[{&#10;    "id": null,&#10;    "items": [&#10;        {&#10;            "exception": null,&#10;            "message": null,&#10;            "payload": {&#10;                "created": false,&#10;                "success": true,&#10;                "id": "00Q5g000008DLS2EAO",&#10;                "errors": []&#10;            },&#10;            "id": "00Q5g000008DLS2EAO",&#10;            "statusCode": null,&#10;            "successful": true&#10;        }&#10;    ],&#10;    "successful": true&#10;}]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Event" doc:id="d6a965cb-0415-4779-8b85-8dee148386ba" >
				<munit:payload value='#[[&#10;    {&#10;        "Email": "bertha@fcof.net",&#10;        "FirstName": "Betha phoneix",&#10;        "Phone": "(850) 644-4205",&#10;        "Title": "vendor or Relations",&#10;        "Id": "00Q5g000008DLS2EAO",&#10;        "LastName": "bo",&#10;        "Company":"tata",&#10;        "type": "Lead"&#10;    }&#10;]&#10;]' />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name=" upsert-lead-flow" doc:id="94e2fc56-96ab-4d41-a50e-ca17036f4692" name="upsert-lead-flow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Assert equals" doc:id="88c4539e-2fc0-4a8c-9f18-d9631fc14bda" actual="#[payload]" expected='#[{&#10;    "id": null,&#10;    "items": [&#10;        {&#10;            "exception": null,&#10;            "message": null,&#10;            "payload": {&#10;                "created": false,&#10;                "success": true,&#10;                "id": "00Q5g000008DLS2EAO",&#10;                "errors": []&#10;            },&#10;            "id": "00Q5g000008DLS2EAO",&#10;            "statusCode": null,&#10;            "successful": true&#10;        }&#10;    ],&#10;    "successful": true&#10;}]'/>
		</munit:validation>
	</munit:test>


</mule>
